generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String       @id @default(cuid())
  name           String?
  email          String?      @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  homepage       String?
  aboutyou       String?
  githubname     String?
  twittername    String?
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
  role           UserRole     @default(FREE)
  accounts       Account[]
  userCourses    UserCourse[]
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Waitlist {
  id            String  @id @default(cuid())
  name          String?
  email         String? @unique
  aiDescription String?
  twitterID     String?
}

model orderlist {
  id                  String  @id @default(cuid())
  name                String?
  email               String?
  checkout_session_id String? @unique
  priceid             String?
  githubusername      String?
  productname         String?
  amount              Float?
  addtime             String?
}

model Course {
  id          String       @id @default(cuid())
  title       String
  description String?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  category    String?
  courseId    String       @unique
  price       Float?
  status      CourseStatus @default(DRAFT)
  thumbnail   String?
  userCourses UserCourse[]
}

model UserCourse {
  id        String   @id @default(cuid())
  userId    String
  courseId  String
  grantedAt DateTime @default(now())
  course    Course   @relation(fields: [courseId], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, courseId])
}

enum UserRole {
  FREE
  PRIME
  VIP
}

enum CourseStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}
